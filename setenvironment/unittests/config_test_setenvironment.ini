[CONFIG_A]
envvar-set     FOO : bar
envvar-append  FOO : baz
envvar-prepend FOO : foo
envvar-set     BAR : foo
envvar-set     BAZ : bar
envvar-unset   FOO
envvar-remove  BAZ

[CONFIG_A+]
use CONFIG_A
use CONFIG_B+


[CONFIG_B]
module-purge
module-use             : setenvironment/unittests/modulefiles
module-load   gcc A    : 4.8.4
module-load   boost    : 1.10.1
module-load   python A : 3.5.3
module-load   gcc B    : 4.8.4
module-unload boost    :
module-unload python   :
module-load   python B : 3.9.0
module-swap   gcc      : gcc/7.3.0
module-remove python   :


[CONFIG_B+]
use CONFIG_B
use CONFIG_A+



[CONFIG_TEST_ENVVAR_REMOVE]
module-use         : /foo/bar/baz
envvar-set     FOO : bar
envvar-append  FOO : baz
envvar-prepend FOO : foo
envvar-set     BAR : foo
envvar-remove  FOO
envvar-remove  UNKNOWN



[MODULE_USE_BADPATH]
module-use : this/is/a/bad/path



[MODULE_LOAD_NOEXIST]
module-load gcc : 1.2.3



[MODULE_LOAD_OK]
module-use      : setenvironment/unittests/modulefiles
module-load gcc : 7.3.0



[ENVVAR_VAR_EXPANSION]
envvar-set ENVVAR_PARAM_01 : "AAA"
envvar-set ENVVAR_PARAM_02 : "B${ENVVAR_PARAM_01}B"



[ENVVAR_VAR_EXPANSION_BAD]
envvar-set ENVVAR_PARAM_01 : "B${ENVVAR_PARAM_MISSING}B"



[CONFIG_ENVVAR_WITH_GENERIC_OPTION]
envvar-set     FOO : bar
envvar-append  FOO : baz
envvar-prepend FOO : foo
key1: value1


[ENVVAR_UNSET_TEST]
envvar-set     FOO : bar
envvar-unset   FOO
# FOO should be UNSET so unsetting again
# should exercise the condition if we try
# to unset a nonexistent envvar.
envvar-unset   FOO B
